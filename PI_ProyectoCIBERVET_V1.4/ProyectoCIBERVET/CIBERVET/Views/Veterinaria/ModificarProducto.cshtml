@model CIBERVET.Models.ProductoForCRUD

@{
    ViewBag.Title = "ModificarProducto";
    Layout = "~/Views/Layout/_Layout_Session_Veterinaria.cshtml";
}

<style>
    .thumbnail {
        width: 100px;
        height: 100px;
        border: none;
    }
</style>

<h2>Modificar Producto</h2>


@using (Html.BeginForm("ModificarProducto", "Veterinaria", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Producto</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdProducto)

        <div class="form-group">
            @Html.LabelFor(model => model.desSimple, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.desSimple, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.desSimple, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.precio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.precio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.precio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.stock, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.stock, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.stock, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.serie, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.serie, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.serie, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.marca, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.marca, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.marca, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Idcategoria, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Idcategoria, new SelectList(ViewBag.categorias, "idCate", "descripcion"))
                @Html.ValidationMessageFor(model => model.Idcategoria, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Idproveedor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Idproveedor, new SelectList(ViewBag.proveedores, "idProve", "razonSocial"))
                @Html.ValidationMessageFor(model => model.Idproveedor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.desHTML, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @* En Hosting
                    @Html.TextAreaFor(model => model.desHTML, new { htmlAttributes = new { @class = "form-control" } })
                *@

                @* En local
                    @Html.TextAreaFor(model => model.desHTML, new { @class = "ckeditor" })
                *@

                @Html.TextAreaFor(model => model.desHTML, new { @class = "ckeditor" })
                @Html.ValidationMessageFor(model => model.desHTML, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.foto1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (!string.IsNullOrEmpty(Model.foto1))
                {
                    @Html.HiddenFor(model => model.foto1)
                    <img class="thumbnail" src="~/images/@Model.foto1" />
                }
                @Html.TextBox("file1", "", new { type = "file" })
                @Html.ValidationMessageFor(model => model.foto1, "", new { @class = "text-danger" })
            </div>
            <p>@ViewBag.Mensaje</p>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.foto2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (!string.IsNullOrEmpty(Model.foto2))
                {
                    @Html.HiddenFor(model => model.foto2)
                    <img class="thumbnail" src="~/images/@Model.foto2" />
                }
                @Html.TextBox("file2", "", new { type = "file" })
                @Html.ValidationMessageFor(model => model.foto2, "", new { @class = "text-danger" })
            </div>
            <p>@ViewBag.Mensaje</p>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.foto3, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (!string.IsNullOrEmpty(Model.foto3))
                {
                    @Html.HiddenFor(model => model.foto3)
                    <img class="thumbnail" src="~/images/@Model.foto3" />
                }
                @Html.TextBox("file3", "", new { type = "file" })
                @Html.ValidationMessageFor(model => model.foto3, "", new { @class = "text-danger" })
            </div>
            <p>@ViewBag.Mensaje</p>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Regresar a la Lista", "MantenimientoProductos")
</div>

<script>
    CKEDITOR.replace('ckeditor');
</script>