@model CIBERVET.Models.MascotaForCrud

@{
    Layout = "~/Views/Layout/_Layout_Session.cshtml";

}

@using (Html.BeginForm("RegistrarMascota", "Cliente", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="about-box-main">


        <div class="container">
            <h3>Registro de Mascotas</h3>
            <div class="row">
                <div class="col-md-6">
                    <div class="content">
                        @Html.ValidationSummary(true, "La creación no se realizó correctamente. Por favor, corrija los errores e inténtelo de nuevo.", new { @class = "text-danger" })
                        <div class="form-group">
                            <p>Nombre</p>
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <br />
                        <div class="form-group">
                            <p>Especie</p>
                            <div class="col-md-12">
                                @Html.DropDownList("idespecie", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.idespecie, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="content">
                        <div class="form-group">
                            <p>Sexo</p>
                            <div class="col-md-12">
                                @Html.DropDownListFor(model => model.sexo, new List<SelectListItem>
                                    {
                                   new SelectListItem{ Text="Macho", Value = "Macho" },
                                   new SelectListItem{ Text="Hembra", Value = "Hembra" } },"Seleccione un Genero", htmlAttributes: new { @class = "form-control" })

                                @Html.ValidationMessageFor(model => model.sexo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <br />
                        <div class="form-group">
                            <p>Raza</p>
                            <div class="col-md-12">
                                @Html.DropDownList("idraza", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.idraza, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.foto, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-12">
                                @Html.TextBox("foto3", "", new { type = "file" })
                                @Html.ValidationMessageFor(model => model.foto, "", new { @class = "text-danger" })
                            </div>
                            <p>@ViewBag.Mensaje</p>
                        </div>
                    </div>
                </div>

                <br />
                <div class="contact-form">
                    <button type="submit" class="btn btn-success" value="">Registrar</button>
                </div>
            </div>
        </div>
    </div>

}


@section Scripts{
        @Scripts.Render("~/bundles/jqueryval")
        <script type="text/javascript">
            $(document).ready(function () {
                console.log("entrandoi")
                $("#idespecie").change(function () {
                    $("#idraza").empty();
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetRaza")',
                        dataType: 'json',
                        data: { idespecie: $("#idespecie").val() },
                        success: function (razas) {
                            $.each(razas, function (i, raza) {
                                $("#idraza").append('<option value="'
                                    + raza.idraza + '">'
                                    + raza.raza + '</option>');
                            });
                        },
                        error: function (ex) {
                            console.log("error");
                            alert('Fallo la conexion al traer las razas.' + ex)
                        }
                    });
                    return false;
                })
            });
            //var Url='Url.Action("GetRaza","Generic")'
        </script>

}
